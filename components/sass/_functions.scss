@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

@function sq($num) {
	$numUnit: strip-unit($num);

	@return $numUnit * $numUnit;
}

// Part of this fancy math came from Takeru Suzuki
// https://github.com/terkel/mathsass/blob/master/dist/functions/_atan.scss
@function trigram-angle($x) {
	$i: 24;
	$a: 0;
	$x: 1 / $x;

	@while $i > 0 {
		$a: (sq($i) * sq($x)) / (2 * $i + 1 + $a);
		$i: $i - 1;
	}

	@return ($PI / 2 - $x / (1 + $a)) * (180 / $PI);
}

@function sqrt ($x) {
	$unit: unit($x);
	$x: strip-unit($x);

	@if $x < 0 {
		@warn "Argument for `sqrt()` must be a positive number.";
		@return null;
	}

	$ret: 1;

	@for $i from 1 through 24 {
		$ret: $ret - ($ret * $ret - $x) / (2 * $ret);
	}

	@return $ret;
}

@function flag-hypotenuse() {
	@return sqrt(sq($flag-height) + sq($flag-width)) * ($flag-height * 0 + 1);;
}
